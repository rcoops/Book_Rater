imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

parameters:
    # a hack - should be configurable under jms_serializer, but the property_naming.id
    # doesn't seem to be taken into account at all.
    jms_serializer.camel_case_naming_strategy.class: JMS\Serializer\Naming\IdenticalPropertyNamingStrategy
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
        - bootstrap_3_layout.html.twig

# Doctrine Configuration
doctrine:
    dbal:
        # swap line comments of following block to use mysql
        driver: '%database_driver%'
        path: '%database_path%'
#        host: '%database_host%'
#        port: '%database_port%'
#        dbname: '%database_name%'

        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    encryption: '%mailer_encryption%'
    port: '%mailer_port%'
    spool: { type: memory }
    auth_mode: '%mailer_auth_mode%'
    stream_options:
        ssl:
            allow_self_signed: true
            verify_peer: false

assetic:
    assets:
        css:
            inputs:
                - '../app/Resources/public/css/*'
        js:
            inputs:
                - '../app/Resources/public/js/*'

fos_user:
    service:
        mailer: fos_user.mailer.twig_swift
    db_driver: orm
    firewall_name: main
    user_class: BookRater\RaterBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: Book Rater
    resetting:
        email:
            template: password
    registration:
        confirmation:
            enabled: true
            template: FOSUserBundle:Registration:email.txt.twig

knp_paginator:
    page_range: 5                       # number of links showed in the pagination menu (e.g: you have 10 pages, a page_range of 3, on the 5th page you'll see links to page 4, 5, 6)
    default_options:
        page_name: page                 # page query parameter name
        sort_field_name: sort           # sort field query parameter name
        sort_direction_name: direction  # sort direction query parameter name
        distinct: true                  # ensure distinct results, useful when ORM queries are using GROUP BY statements
        filter_field_name: filterField  # filter field query parameter name
        filter_value_name: filterValue  # filter value query paameter name
    template:
        pagination: '@KnpPaginator/Pagination/twitter_bootstrap_v3_pagination.html.twig'     # sliding pagination controls template
        sortable:   '@KnpPaginator/Pagination/sortable_link.html.twig' # sort link template
        filtration: '@KnpPaginator/Pagination/filtration.html.twig'  # filters template

easy_admin:
    site_name: 'BookRater Admin'
    design:
        color_scheme: 'light'
    entities:
        Review:
            class: BookRater\RaterBundle\Entity\Review
        Book:
            class: BookRater\RaterBundle\Entity\Book
        Author:
            class: BookRater\RaterBundle\Entity\Author
        User:
            class: BookRater\RaterBundle\Entity\User
        Message:
            class: BookRater\RaterBundle\Entity\Message

fos_rest:
    routing_loader:
        default_format: json

lexik_jwt_authentication:
    private_key_path: '%kernel.root_dir%/../var/jwt/private.pem'
    public_key_path:  '%kernel.root_dir%/../var/jwt/public.pem'
    pass_phrase:      '%jwt_key_pass_phrase%'
    token_ttl:        3600

bazinga_hateoas:
    serializer:
        json: custom_hateoas_json_serializer

nelmio_api_doc:
    documentation:
        info:
            title: Book Rater
            description: The Web Application for... Rating Books
            version: 1.0.0
        securityDefinitions:
            Bearer:
                type: apiKey
                description: 'Value: Bearer {jwt}'
                name: Authorization
                in: header
            Basic:
                type: basic
                description: 'Value: Basic {base64encode(username:password)}'
                name: Authorization
                in: header
        security:
            - Bearer: []
            - Basic: []

    areas:
        default:
            path_patterns: # an array of regexps
                - ^/api(?!/doc.*$)

jms_serializer:
    metadata:
        directories:
            FOSUB:
                namespace_prefix: FOS\UserBundle
                path: '%kernel.root_dir%/config/serializer/FOSUB'
