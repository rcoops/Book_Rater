<?php

namespace BookRater\RaterBundle\Repository;

use Doctrine\ORM\EntityManagerInterface;
use \Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping;
use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * BookRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BookRepository extends EntityRepository
{

    public function findAllOrderedByNameQB()
    {
        return $this->createQueryBuilder('book')
            ->orderBy('book.title');
    }

    public function findAllWhereTitleLike(string $titleFragment)
    {
        $qb = $this->createQueryBuilder('book');
        return $qb
            ->select('book')
            ->where($qb->expr()->like('book.title', ":titleFragment"))
            ->orderBy('book.title')
            ->setParameter('titleFragment', '%'.$titleFragment.'%')
            ->getQuery()
            ->getResult();
    }

    public function findAllByFilter($filter = '')
    {
        $qb = $this->createQueryBuilder('book');

        if ($filter) {
            $qb->innerJoin('book.authors', 'book_author')
                ->andWhere(
                    $qb->expr()->orX(
                        $qb->expr()->like('book.title', ':filter'),
                        $qb->expr()->like('book_author.firstName', ':filter'),
                        $qb->expr()->like('book_author.lastName', ':filter')
                    )
                )
                ->setParameter('filter', '%'.$filter.'%');
        }
        $qb->addOrderBy('book.title', 'DESC');
    }

}
